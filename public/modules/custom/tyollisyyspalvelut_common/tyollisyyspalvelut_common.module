<?php

/**
 * @file
 * Hooks for TyÃ¶llisyyspalvelut Common module.
 */

use Drupal\editor\Entity\Editor;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityForm;
use Drupal\Core\Entity\EntityInterface;

/**
 * @param array $css
 * @param Editor $editor
 */
function tyollisyyspalvelut_common_ckeditor_css_alter(array &$css, Editor $editor) {
  $css[] = drupal_get_path('module', 'tyollisyyspalvelut_common') . '/css/ckeditor.css';
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function tyollisyyspalvelut_common_form_node_form_alter(&$form, &$form_state) {
  $form['#attached']['library'][] = 'tyollisyyspalvelut_common/tyollisyyspalvelut_common';
  // Hide field from HDBT theme we don't want to use.
  $form['color_palette']['#access'] = FALSE;

  // Hide preview button for now.
  $form['actions']['preview']['#access'] = FALSE;

  // Custom redirect after node save.
  $form['actions']['submit']['#submit'][] = 'redirectFunction';
}

/**
 * Redirect to node view page after save.
 */
function redirectFunction(array &$form, FormStateInterface $form_state) {
  /** @var \Drupal\Core\Entity\EntityForm $form_object */
  $form_object = $form_state->getFormObject();
  if ($form_object instanceof EntityForm) {

    // Remove destination query string from request.
    \Drupal::request()->query->remove('destination');
    return;
  }
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 *
 * Create translations for Event when it's created through JSON:API
 * because JSON:API POST method doesn't allow creating additional translations atm.
 * https://www.drupal.org/docs/core-modules-and-themes/core-modules/jsonapi-module/translations
 */
function tyollisyyspalvelut_common_node_insert(EntityInterface $entity) {
  if ($entity->getType() !== 'event') {
    return;
  }

  $site_languages = \Drupal::languageManager()->getLanguages();
  $langcodes = array_keys($site_languages);

  foreach ($langcodes as $lang) {
    if ($lang === 'fi') {
      continue;
    }

    $translated_entity = $entity->addTranslation($lang, $entity->toArray());
    $translated_entity->save();
  }
}

/**
 * Implements hook_elasticsearch_connector_load_library_options_alter().
 */
function tyollisyyspalvelut_common_elasticsearch_connector_load_library_options_alter(&$options, &$context) {
  /**
   * Set cURL options to trust self-signed certificate.
   *
   * @fixme rather than disabling verification, should set CURLOPT_SSLCERT to correct value.
   */
    $options['curl'][CURLOPT_SSL_VERIFYPEER] = FALSE;
    $options['curl'][CURLOPT_SSL_VERIFYHOST] = FALSE;
}
